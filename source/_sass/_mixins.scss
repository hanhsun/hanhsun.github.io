
@mixin media($query: $feature $value) {
  @if length($query) == 1 {
    @media screen and ($default-feature: nth($query, 1)) {
      @content;
    }
  }

  @else {
    $loop-to: length($query);
    $media-query: 'screen and ';

    @if length($query) % 2 != 0 {
      $loop-to: $loop-to - 1;
    }

    $i: 1;
    @while $i <= $loop-to {
      $media-query: $media-query + '(' + nth($query, $i) + ': ' + nth($query, $i + 1) + ') ';

      @if ($i + 1) != $loop-to {
        $media-query: $media-query + 'and ';
      }

      $i: $i + 2;
    }

    @media #{$media-query} {
      @content;
    }
  }
}


@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

@mixin background-gradiant() {
  background: darken($primary-color, 10%);
  background: -webkit-linear-gradient(left top, $secondary-color, $primary-color); /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient(bottom right, $secondary-color, $primary-color); /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient(bottom right, $secondary-color, $primary-color); /* For Firefox 3.6 to 15 */
  background: linear-gradient(to bottom right, $secondary-color, $primary-color); /* Standard syntax */
}


@mixin ellipsis(){
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
